<html lang="en" xmlns:th="www.thymeleaf.org " xmlns:sec="www.thymeleaf.org/extras/spring-security">

https://github.com/jcyang36/codeworkAcademy-Images

<div th:attr="value=#{value}"></div>



<script th:inline="javascript">
/*<![CDATA[*/
    var message = [[${message}]];
    console.log(message);
/*]]>*/
</script>
















//SecurityConfiguration
//SecurityConfiguration
//SecurityConfiguration
@Configuration
@EnableWebSecurity
@EnableGlobalMethodSecurity (prePostEnabled = true)
public class SecurityConfiguration extends WebSecurityConfigurerAdapter {
    @Autowired
    private UserRepository userRepository;
    @Override
    public UserDetailsService userDetailsServiceBean() throws Exception {
        return new SSUserDetailsService(userRepository);
    }
    @Override
    protected void configure(HttpSecurity http) throws Exception {
        http
                .authorizeRequests()
                .antMatchers("/").permitAll()
                .anyRequest().authenticated()
                .and()
                .formLogin().loginPage("/login").permitAll()
                .and()
                .logout()
                .logoutRequestMatcher(new AntPathRequestMatcher("/logout"))
                .logoutSuccessUrl("/login").permitAll().permitAll()
                .and()
                .httpBasic();
    }
   @Override
    protected void configure(AuthenticationManagerBuilder auth) throws Exception {
        //hard coded users
        auth.inMemoryAuthentication().withUser("user1").password("password").roles("USER")
                               .and().withUser("user2").password("password").roles("ADMIN");
        //users from DB
        auth.userDetailsService(userDetailsServiceBean());
    }
}
//SecurityConfiguration
//SecurityConfiguration
//SecurityConfiguration
